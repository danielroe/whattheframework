---
function getEnumKeyByEnumValue(myEnum: any, enumValue: string | null) {
		if(enumValue === null) {
			return null;
		}

    let keys = Object.keys(myEnum).filter(x => myEnum[x] == enumValue);
    return keys.length > 0 ? keys[0] : null;
}

enum WebsiteType {
  Static = "Static",
  MostlyStatic = "MostlyStatic",
  MostlyStaticOftenUpdated = "MostlyStaticOftenUpdated",
  NotStatic = "NotStatic",
}

const frameworks = {
  [WebsiteType.Static as string]: ["astro"],
 	[WebsiteType.MostlyStatic  as string]: ["astro"],
	[WebsiteType.MostlyStaticOftenUpdated  as string]: ["next.js"],
	[WebsiteType.NotStatic  as string]: ["remix"]
}

const requestUrl = new URL(Astro.request.url);
const typeParam = requestUrl.searchParams.get("type");

if (typeParam !== null && typeof(typeParam) !== "string") {
	throw new Error("BKKKAAHAHAHAHAHAHAH");
}

const frameworkType = typeParam !== null ? getEnumKeyByEnumValue(WebsiteType, typeParam) : null;
const frameworkOptions = frameworkType !== null ? frameworks[frameworkType] : null;

const showForm = frameworkType === null;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>What the Framework?</title>
  </head>
  <body>
    <h1>What the Framework?</h1>

    {
			showForm ? (
				<h2>What type of website are you making?</h2>
        <form>
          <fieldset>
            <div>
              <input type="radio" name="type" id={WebsiteType.Static} value={WebsiteType.Static} />
              <label for="static">Static site (home page)</label>
            </div>
            <div>
              <input type="radio" name="type" id={WebsiteType.MostlyStatic} value={WebsiteType.MostlyStatic} />
              <label for="mostly_static">Mostly static site with updates (blog)</label>
            </div>
            <div>
              <input
                type="radio"
                name="type"
                id={WebsiteType.MostlyStaticOftenUpdated}
                value={WebsiteType.MostlyStaticOftenUpdated}
              />
              <label for="mostly_static_often_updated">Mostly static but often updated (e-commerce)</label>
            </div>
            <div>
              <input type="radio" name="type" id={WebsiteType.NotStatic} value={WebsiteType.NotStatic} />
              <label for="not_static">Not static, constant updates (interactive application)</label>
            </div>
            <button type="submit">Give me frameworks</button>
          </fieldset>
        </form>
      ) : (frameworkOptions?.map((framework: string) => <div>{framework}</div>))
    }


		<a href="/">Start over</a>
  </body>
</html>
