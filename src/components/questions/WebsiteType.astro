---
import { WebsiteType } from "../../data/types";
const types = Object.values(WebsiteType).map((value) => value);

const supportingInfo: any = {
  [WebsiteType.Static]: {
    heading: "Static site",
    details: "A content-based website that provides the same content and experience on every visit.",
    examples: ["blog site", "personal portfolio", "marketing site"],
  },
  [WebsiteType.Hybrid]: {
    heading: "Flexible site",
    details:
      "A website that may have some static pages, but may also need to cater for unique content on visits to certain pages.",
    examples: ["", "", ""],
  },
  [WebsiteType.Dynamic]: {
    heading: "Dynamic site",
    details: "A website that can provide different content and experiences on each page view.",
    examples: ["", "forum", "video streaming service"],
  },
};

// Dynamic sites allow for changing content, such as: user login, filtering and manipulating visible data, collection of visitor data.
// only difference is that contnet could very vased upon who the visitor is
---

<style>
  .choice {
    border: 1px solid green;
    margin-bottom: 1rem;
    display: block;
  }
</style>

<h2>What type of website are you building?</h2>
<p>How it's deployed............. basically do you need SSG, SSR, or a MIX</p>
{
  types.map((type) => (
    <div class="choice">
      <a href={type.toLowerCase()}>
        <h3>{supportingInfo[type].heading}</h3>
      </a>
      <p>{supportingInfo[type].details}</p>
    </div>
  ))
}
